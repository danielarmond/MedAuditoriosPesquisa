// <auto-generated />
using System;
using MedAuditoriosPesquisa.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MedAuditoriosPesquisa.Migrations
{
    [DbContext(typeof(MedAuditoriosPesquisaContext))]
    [Migration("20231219110359_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("MedAuditoriosPesquisa.Models.Filial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Filial");
                });

            modelBuilder.Entity("MedAuditoriosPesquisa.Models.Local", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Capacidade")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataInteracao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("EmailContato")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("FilialId")
                        .HasColumnType("int");

                    b.Property<string>("LinkVisita")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NomeContato")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Observacao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("PeDireito")
                        .HasColumnType("int");

                    b.Property<int>("StatusPrimarioId")
                        .HasColumnType("int");

                    b.Property<int>("StatusSecundarioId")
                        .HasColumnType("int");

                    b.Property<int>("TelefoneContato")
                        .HasColumnType("int");

                    b.Property<int>("TipoCadeira")
                        .HasColumnType("int");

                    b.Property<string>("UrlImagem")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("FilialId");

                    b.HasIndex("StatusPrimarioId");

                    b.HasIndex("StatusSecundarioId");

                    b.ToTable("Local");
                });

            modelBuilder.Entity("MedAuditoriosPesquisa.Models.StatusPrimario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("StatusPrimario");
                });

            modelBuilder.Entity("MedAuditoriosPesquisa.Models.StatusSecundario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("StatusSecundario");
                });

            modelBuilder.Entity("MedAuditoriosPesquisa.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Funcao")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("MedAuditoriosPesquisa.Models.Local", b =>
                {
                    b.HasOne("MedAuditoriosPesquisa.Models.Filial", "Filial")
                        .WithMany()
                        .HasForeignKey("FilialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MedAuditoriosPesquisa.Models.StatusPrimario", "StatusPrimario")
                        .WithMany()
                        .HasForeignKey("StatusPrimarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MedAuditoriosPesquisa.Models.StatusSecundario", "StatusSecundario")
                        .WithMany()
                        .HasForeignKey("StatusSecundarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Filial");

                    b.Navigation("StatusPrimario");

                    b.Navigation("StatusSecundario");
                });
#pragma warning restore 612, 618
        }
    }
}
